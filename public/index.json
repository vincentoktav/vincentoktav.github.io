[{"authors":["vincent"],"categories":null,"content":"I am a rising senior majoring in Statistics at University of Illinois at Urbana-Champaign. While studying at the U of I, I am also working as a Course Assistant (CA) in several Statistics classes including STAT 400 - Statistics and Probability I (the first core statistics course) and STAT 420 - Methods of Applied Statistics (statistical modeling in R). I will be graduating this May 2020 and I am open to any career opportunities in the field of Data Science / Data Analytics.\nThis site is a semi-professional blog and personal website. Some of the works are school-related, others are just about programming, analysis, my dog or thoughts about life in general.\n","date":1575676800,"expirydate":-62135596800,"kind":"taxonomy","lang":"en","lastmod":1575676800,"objectID":"c0aeec9b6caa689b4eb1e685fa0fafed","permalink":"/authors/vincent/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/authors/vincent/","section":"authors","summary":"I am a rising senior majoring in Statistics at University of Illinois at Urbana-Champaign. While studying at the U of I, I am also working as a Course Assistant (CA) in several Statistics classes including STAT 400 - Statistics and Probability I (the first core statistics course) and STAT 420 - Methods of Applied Statistics (statistical modeling in R). I will be graduating this May 2020 and I am open to any career opportunities in the field of Data Science / Data Analytics.","tags":null,"title":"Vincent Oktavianus","type":"authors"},{"authors":["lance"],"categories":null,"content":"Dislikes  High-places Shower Lemon  ","date":-62135596800,"expirydate":-62135596800,"kind":"taxonomy","lang":"en","lastmod":-62135596800,"objectID":"a937998a910879193c9360c580af0248","permalink":"/authors/lance/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/authors/lance/","section":"authors","summary":"Dislikes  High-places Shower Lemon  ","tags":null,"title":"Lancelot the Hustle","type":"authors"},{"authors":null,"categories":null,"content":"Flexibility This feature can be used for publishing content such as:\n Online courses Project or software documentation Tutorials  The courses folder may be renamed. For example, we can rename it to docs for software/project documentation or tutorials for creating an online course.\nDelete tutorials To remove these pages, delete the courses folder and see below to delete the associated menu link.\nUpdate site menu After renaming or deleting the courses folder, you may wish to update any [[main]] menu links to it by editing your menu configuration at config/_default/menus.toml.\nFor example, if you delete this folder, you can remove the following from your menu configuration:\n[[main]] name = \u0026quot;Courses\u0026quot; url = \u0026quot;courses/\u0026quot; weight = 50  Or, if you are creating a software documentation site, you can rename the courses folder to docs and update the associated Courses menu configuration to:\n[[main]] name = \u0026quot;Docs\u0026quot; url = \u0026quot;docs/\u0026quot; weight = 50  Update the docs menu If you use the docs layout, note that the name of the menu in the front matter should be in the form [menu.X] where X is the folder name. Hence, if you rename the courses/example/ folder, you should also rename the menu definitions in the front matter of files within courses/example/ from [menu.example] to [menu.\u0026lt;NewFolderName\u0026gt;].\n","date":1536451200,"expirydate":-62135596800,"kind":"section","lang":"en","lastmod":1536451200,"objectID":"59c3ce8e202293146a8a934d37a4070b","permalink":"/courses/example/","publishdate":"2018-09-09T00:00:00Z","relpermalink":"/courses/example/","section":"courses","summary":"Learn how to use Academic's docs layout for publishing online courses, software documentation, and tutorials.","tags":null,"title":"Overview","type":"docs"},{"authors":null,"categories":null,"content":"In this tutorial, I\u0026rsquo;ll share my top 10 tips for getting started with Academic:\nTip 1 Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum. Sed ac faucibus dolor, scelerisque sollicitudin nisi. Cras purus urna, suscipit quis sapien eu, pulvinar tempor diam. Quisque risus orci, mollis id ante sit amet, gravida egestas nisl. Sed ac tempus magna. Proin in dui enim. Donec condimentum, sem id dapibus fringilla, tellus enim condimentum arcu, nec volutpat est felis vel metus. Vestibulum sit amet erat at nulla eleifend gravida.\nNullam vel molestie justo. Curabitur vitae efficitur leo. In hac habitasse platea dictumst. Sed pulvinar mauris dui, eget varius purus congue ac. Nulla euismod, lorem vel elementum dapibus, nunc justo porta mi, sed tempus est est vel tellus. Nam et enim eleifend, laoreet sem sit amet, elementum sem. Morbi ut leo congue, maximus velit ut, finibus arcu. In et libero cursus, rutrum risus non, molestie leo. Nullam congue quam et volutpat malesuada. Sed risus tortor, pulvinar et dictum nec, sodales non mi. Phasellus lacinia commodo laoreet. Nam mollis, erat in feugiat consectetur, purus eros egestas tellus, in auctor urna odio at nibh. Mauris imperdiet nisi ac magna convallis, at rhoncus ligula cursus.\nCras aliquam rhoncus ipsum, in hendrerit nunc mattis vitae. Duis vitae efficitur metus, ac tempus leo. Cras nec fringilla lacus. Quisque sit amet risus at ipsum pharetra commodo. Sed aliquam mauris at consequat eleifend. Praesent porta, augue sed viverra bibendum, neque ante euismod ante, in vehicula justo lorem ac eros. Suspendisse augue libero, venenatis eget tincidunt ut, malesuada at lorem. Donec vitae bibendum arcu. Aenean maximus nulla non pretium iaculis. Quisque imperdiet, nulla in pulvinar aliquet, velit quam ultrices quam, sit amet fringilla leo sem vel nunc. Mauris in lacinia lacus.\nSuspendisse a tincidunt lacus. Curabitur at urna sagittis, dictum ante sit amet, euismod magna. Sed rutrum massa id tortor commodo, vitae elementum turpis tempus. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean purus turpis, venenatis a ullamcorper nec, tincidunt et massa. Integer posuere quam rutrum arcu vehicula imperdiet. Mauris ullamcorper quam vitae purus congue, quis euismod magna eleifend. Vestibulum semper vel augue eget tincidunt. Fusce eget justo sodales, dapibus odio eu, ultrices lorem. Duis condimentum lorem id eros commodo, in facilisis mauris scelerisque. Morbi sed auctor leo. Nullam volutpat a lacus quis pharetra. Nulla congue rutrum magna a ornare.\nAliquam in turpis accumsan, malesuada nibh ut, hendrerit justo. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Quisque sed erat nec justo posuere suscipit. Donec ut efficitur arcu, in malesuada neque. Nunc dignissim nisl massa, id vulputate nunc pretium nec. Quisque eget urna in risus suscipit ultricies. Pellentesque odio odio, tincidunt in eleifend sed, posuere a diam. Nam gravida nisl convallis semper elementum. Morbi vitae felis faucibus, vulputate orci placerat, aliquet nisi. Aliquam erat volutpat. Maecenas sagittis pulvinar purus, sed porta quam laoreet at.\nTip 2 Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum. Sed ac faucibus dolor, scelerisque sollicitudin nisi. Cras purus urna, suscipit quis sapien eu, pulvinar tempor diam. Quisque risus orci, mollis id ante sit amet, gravida egestas nisl. Sed ac tempus magna. Proin in dui enim. Donec condimentum, sem id dapibus fringilla, tellus enim condimentum arcu, nec volutpat est felis vel metus. Vestibulum sit amet erat at nulla eleifend gravida.\nNullam vel molestie justo. Curabitur vitae efficitur leo. In hac habitasse platea dictumst. Sed pulvinar mauris dui, eget varius purus congue ac. Nulla euismod, lorem vel elementum dapibus, nunc justo porta mi, sed tempus est est vel tellus. Nam et enim eleifend, laoreet sem sit amet, elementum sem. Morbi ut leo congue, maximus velit ut, finibus arcu. In et libero cursus, rutrum risus non, molestie leo. Nullam congue quam et volutpat malesuada. Sed risus tortor, pulvinar et dictum nec, sodales non mi. Phasellus lacinia commodo laoreet. Nam mollis, erat in feugiat consectetur, purus eros egestas tellus, in auctor urna odio at nibh. Mauris imperdiet nisi ac magna convallis, at rhoncus ligula cursus.\nCras aliquam rhoncus ipsum, in hendrerit nunc mattis vitae. Duis vitae efficitur metus, ac tempus leo. Cras nec fringilla lacus. Quisque sit amet risus at ipsum pharetra commodo. Sed aliquam mauris at consequat eleifend. Praesent porta, augue sed viverra bibendum, neque ante euismod ante, in vehicula justo lorem ac eros. Suspendisse augue libero, venenatis eget tincidunt ut, malesuada at lorem. Donec vitae bibendum arcu. Aenean maximus nulla non pretium iaculis. Quisque imperdiet, nulla in pulvinar aliquet, velit quam ultrices quam, sit amet fringilla leo sem vel nunc. Mauris in lacinia lacus.\nSuspendisse a tincidunt lacus. Curabitur at urna sagittis, dictum ante sit amet, euismod magna. Sed rutrum massa id tortor commodo, vitae elementum turpis tempus. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean purus turpis, venenatis a ullamcorper nec, tincidunt et massa. Integer posuere quam rutrum arcu vehicula imperdiet. Mauris ullamcorper quam vitae purus congue, quis euismod magna eleifend. Vestibulum semper vel augue eget tincidunt. Fusce eget justo sodales, dapibus odio eu, ultrices lorem. Duis condimentum lorem id eros commodo, in facilisis mauris scelerisque. Morbi sed auctor leo. Nullam volutpat a lacus quis pharetra. Nulla congue rutrum magna a ornare.\nAliquam in turpis accumsan, malesuada nibh ut, hendrerit justo. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Quisque sed erat nec justo posuere suscipit. Donec ut efficitur arcu, in malesuada neque. Nunc dignissim nisl massa, id vulputate nunc pretium nec. Quisque eget urna in risus suscipit ultricies. Pellentesque odio odio, tincidunt in eleifend sed, posuere a diam. Nam gravida nisl convallis semper elementum. Morbi vitae felis faucibus, vulputate orci placerat, aliquet nisi. Aliquam erat volutpat. Maecenas sagittis pulvinar purus, sed porta quam laoreet at.\n","date":1557010800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1557010800,"objectID":"74533bae41439377bd30f645c4677a27","permalink":"/courses/example/example1/","publishdate":"2019-05-05T00:00:00+01:00","relpermalink":"/courses/example/example1/","section":"courses","summary":"In this tutorial, I\u0026rsquo;ll share my top 10 tips for getting started with Academic:\nTip 1 Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum. Sed ac faucibus dolor, scelerisque sollicitudin nisi. Cras purus urna, suscipit quis sapien eu, pulvinar tempor diam. Quisque risus orci, mollis id ante sit amet, gravida egestas nisl. Sed ac tempus magna. Proin in dui enim.","tags":null,"title":"Example Page 1","type":"docs"},{"authors":null,"categories":null,"content":"Here are some more tips for getting started with Academic:\nTip 3 Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum. Sed ac faucibus dolor, scelerisque sollicitudin nisi. Cras purus urna, suscipit quis sapien eu, pulvinar tempor diam. Quisque risus orci, mollis id ante sit amet, gravida egestas nisl. Sed ac tempus magna. Proin in dui enim. Donec condimentum, sem id dapibus fringilla, tellus enim condimentum arcu, nec volutpat est felis vel metus. Vestibulum sit amet erat at nulla eleifend gravida.\nNullam vel molestie justo. Curabitur vitae efficitur leo. In hac habitasse platea dictumst. Sed pulvinar mauris dui, eget varius purus congue ac. Nulla euismod, lorem vel elementum dapibus, nunc justo porta mi, sed tempus est est vel tellus. Nam et enim eleifend, laoreet sem sit amet, elementum sem. Morbi ut leo congue, maximus velit ut, finibus arcu. In et libero cursus, rutrum risus non, molestie leo. Nullam congue quam et volutpat malesuada. Sed risus tortor, pulvinar et dictum nec, sodales non mi. Phasellus lacinia commodo laoreet. Nam mollis, erat in feugiat consectetur, purus eros egestas tellus, in auctor urna odio at nibh. Mauris imperdiet nisi ac magna convallis, at rhoncus ligula cursus.\nCras aliquam rhoncus ipsum, in hendrerit nunc mattis vitae. Duis vitae efficitur metus, ac tempus leo. Cras nec fringilla lacus. Quisque sit amet risus at ipsum pharetra commodo. Sed aliquam mauris at consequat eleifend. Praesent porta, augue sed viverra bibendum, neque ante euismod ante, in vehicula justo lorem ac eros. Suspendisse augue libero, venenatis eget tincidunt ut, malesuada at lorem. Donec vitae bibendum arcu. Aenean maximus nulla non pretium iaculis. Quisque imperdiet, nulla in pulvinar aliquet, velit quam ultrices quam, sit amet fringilla leo sem vel nunc. Mauris in lacinia lacus.\nSuspendisse a tincidunt lacus. Curabitur at urna sagittis, dictum ante sit amet, euismod magna. Sed rutrum massa id tortor commodo, vitae elementum turpis tempus. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean purus turpis, venenatis a ullamcorper nec, tincidunt et massa. Integer posuere quam rutrum arcu vehicula imperdiet. Mauris ullamcorper quam vitae purus congue, quis euismod magna eleifend. Vestibulum semper vel augue eget tincidunt. Fusce eget justo sodales, dapibus odio eu, ultrices lorem. Duis condimentum lorem id eros commodo, in facilisis mauris scelerisque. Morbi sed auctor leo. Nullam volutpat a lacus quis pharetra. Nulla congue rutrum magna a ornare.\nAliquam in turpis accumsan, malesuada nibh ut, hendrerit justo. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Quisque sed erat nec justo posuere suscipit. Donec ut efficitur arcu, in malesuada neque. Nunc dignissim nisl massa, id vulputate nunc pretium nec. Quisque eget urna in risus suscipit ultricies. Pellentesque odio odio, tincidunt in eleifend sed, posuere a diam. Nam gravida nisl convallis semper elementum. Morbi vitae felis faucibus, vulputate orci placerat, aliquet nisi. Aliquam erat volutpat. Maecenas sagittis pulvinar purus, sed porta quam laoreet at.\nTip 4 Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum. Sed ac faucibus dolor, scelerisque sollicitudin nisi. Cras purus urna, suscipit quis sapien eu, pulvinar tempor diam. Quisque risus orci, mollis id ante sit amet, gravida egestas nisl. Sed ac tempus magna. Proin in dui enim. Donec condimentum, sem id dapibus fringilla, tellus enim condimentum arcu, nec volutpat est felis vel metus. Vestibulum sit amet erat at nulla eleifend gravida.\nNullam vel molestie justo. Curabitur vitae efficitur leo. In hac habitasse platea dictumst. Sed pulvinar mauris dui, eget varius purus congue ac. Nulla euismod, lorem vel elementum dapibus, nunc justo porta mi, sed tempus est est vel tellus. Nam et enim eleifend, laoreet sem sit amet, elementum sem. Morbi ut leo congue, maximus velit ut, finibus arcu. In et libero cursus, rutrum risus non, molestie leo. Nullam congue quam et volutpat malesuada. Sed risus tortor, pulvinar et dictum nec, sodales non mi. Phasellus lacinia commodo laoreet. Nam mollis, erat in feugiat consectetur, purus eros egestas tellus, in auctor urna odio at nibh. Mauris imperdiet nisi ac magna convallis, at rhoncus ligula cursus.\nCras aliquam rhoncus ipsum, in hendrerit nunc mattis vitae. Duis vitae efficitur metus, ac tempus leo. Cras nec fringilla lacus. Quisque sit amet risus at ipsum pharetra commodo. Sed aliquam mauris at consequat eleifend. Praesent porta, augue sed viverra bibendum, neque ante euismod ante, in vehicula justo lorem ac eros. Suspendisse augue libero, venenatis eget tincidunt ut, malesuada at lorem. Donec vitae bibendum arcu. Aenean maximus nulla non pretium iaculis. Quisque imperdiet, nulla in pulvinar aliquet, velit quam ultrices quam, sit amet fringilla leo sem vel nunc. Mauris in lacinia lacus.\nSuspendisse a tincidunt lacus. Curabitur at urna sagittis, dictum ante sit amet, euismod magna. Sed rutrum massa id tortor commodo, vitae elementum turpis tempus. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean purus turpis, venenatis a ullamcorper nec, tincidunt et massa. Integer posuere quam rutrum arcu vehicula imperdiet. Mauris ullamcorper quam vitae purus congue, quis euismod magna eleifend. Vestibulum semper vel augue eget tincidunt. Fusce eget justo sodales, dapibus odio eu, ultrices lorem. Duis condimentum lorem id eros commodo, in facilisis mauris scelerisque. Morbi sed auctor leo. Nullam volutpat a lacus quis pharetra. Nulla congue rutrum magna a ornare.\nAliquam in turpis accumsan, malesuada nibh ut, hendrerit justo. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Quisque sed erat nec justo posuere suscipit. Donec ut efficitur arcu, in malesuada neque. Nunc dignissim nisl massa, id vulputate nunc pretium nec. Quisque eget urna in risus suscipit ultricies. Pellentesque odio odio, tincidunt in eleifend sed, posuere a diam. Nam gravida nisl convallis semper elementum. Morbi vitae felis faucibus, vulputate orci placerat, aliquet nisi. Aliquam erat volutpat. Maecenas sagittis pulvinar purus, sed porta quam laoreet at.\n","date":1557010800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1557010800,"objectID":"1c2b5a11257c768c90d5050637d77d6a","permalink":"/courses/example/example2/","publishdate":"2019-05-05T00:00:00+01:00","relpermalink":"/courses/example/example2/","section":"courses","summary":"Here are some more tips for getting started with Academic:\nTip 3 Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum. Sed ac faucibus dolor, scelerisque sollicitudin nisi. Cras purus urna, suscipit quis sapien eu, pulvinar tempor diam. Quisque risus orci, mollis id ante sit amet, gravida egestas nisl. Sed ac tempus magna. Proin in dui enim. Donec condimentum, sem id dapibus fringilla, tellus enim condimentum arcu, nec volutpat est felis vel metus.","tags":null,"title":"Example Page 2","type":"docs"},{"authors":[],"categories":null,"content":" Click on the Slides button above to view the built-in slides feature.   Slides can be added in a few ways:\n Create slides using Academic\u0026rsquo;s Slides feature and link using slides parameter in the front matter of the talk file Upload an existing slide deck to static/ and link using url_slides parameter in the front matter of the talk file Embed your slides (e.g. Google Slides) or presentation video on this page using shortcodes.  Further talk details can easily be added to this page using Markdown and $\\rm \\LaTeX$ math code.\n","date":1906549200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1906549200,"objectID":"96344c08df50a1b693cc40432115cbe3","permalink":"/talk/example/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/talk/example/","section":"talk","summary":"An example talk using Academic's Markdown slides feature.","tags":[],"title":"Example Talk","type":"talk"},{"authors":[],"categories":["R"],"content":"","date":1583625600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1583713622,"objectID":"7e109f6c20487a48536b5a463a9c774a","permalink":"/post/play-a-roulette/","publishdate":"2020-03-08T00:00:00Z","relpermalink":"/post/play-a-roulette/","section":"post","summary":"","tags":["R"],"title":"Play a Roulette","type":"post"},{"authors":["Vincent Oktavianus"],"categories":["regression","EDA","Python"],"content":"Import Library import math import pandas as pd import matplotlib.pyplot as plt import seaborn as sns from sklearn.linear_model import LinearRegression # Visulaization options: %matplotlib inline  Read data Data obtained from UCI Machine Learning Repository \u0026amp; accessed via Kaggle (https://www.kaggle.com/uciml/red-wine-quality-cortez-et-al-2009) df = pd.read_csv(\u0026quot;redwine.csv\u0026quot;)  df   .dataframe tbody tr th:only-of-type { vertical-align: middle; } .dataframe tbody tr th { vertical-align: top; } .dataframe thead th { text-align: right; }  \n  fixed acidity volatile acidity citric acid residual sugar chlorides free sulfur dioxide total sulfur dioxide density pH sulphates alcohol quality     0 7.4 0.700 0.00 1.9 0.076 11.0 34.0 0.99780 3.51 0.56 9.4 5   1 7.8 0.880 0.00 2.6 0.098 25.0 67.0 0.99680 3.20 0.68 9.8 5   2 7.8 0.760 0.04 2.3 0.092 15.0 54.0 0.99700 3.26 0.65 9.8 5   3 11.2 0.280 0.56 1.9 0.075 17.0 60.0 0.99800 3.16 0.58 9.8 6   4 7.4 0.700 0.00 1.9 0.076 11.0 34.0 0.99780 3.51 0.56 9.4 5   ... ... ... ... ... ... ... ... ... ... ... ... ...   1594 6.2 0.600 0.08 2.0 0.090 32.0 44.0 0.99490 3.45 0.58 10.5 5   1595 5.9 0.550 0.10 2.2 0.062 39.0 51.0 0.99512 3.52 0.76 11.2 6   1596 6.3 0.510 0.13 2.3 0.076 29.0 40.0 0.99574 3.42 0.75 11.0 6   1597 5.9 0.645 0.12 2.0 0.075 32.0 44.0 0.99547 3.57 0.71 10.2 5   1598 6.0 0.310 0.47 3.6 0.067 18.0 42.0 0.99549 3.39 0.66 11.0 6    1599 rows × 12 columns\n Data Description Accessed via Kaggle\nAbout The dataset is related to red variants of the Portuguese \u0026ldquo;Vinho Verde\u0026rdquo; wine. For more details, consult the reference [Cortez et al., 2009]. Due to privacy and logistic issues, only physicochemical (inputs) and sensory (the output) variables are available (e.g. there is no data about grape types, wine brand, wine selling price, etc.).\nInput variables (based on physicochemical tests):  fixed acidity : most acids involved with wine or fixed or nonvolatile (do not evaporate readily). volatile acidity : the amount of acetic acid in wine, which at too high of levels can lead to an unpleasant, vinegar taste. citric acid : found in small quantities, citric acid can add \u0026lsquo;freshness\u0026rsquo; and flavor to wines. residual sugar : the amount of sugar remaining after fermentation stops, it\u0026rsquo;s rare to find wines with less than 1 gram/liter and wines with greater than 45 grams/liter are considered sweet. chlorides : the amount of salt in the wine. free sulfur dioxide : the free form of SO2 exists in equilibrium between molecular SO2 (as a dissolved gas) and bisulfite ion; it prevents microbial growth and the oxidation of wine. total sulfur dioxide : amount of free and bound forms of S02; in low concentrations, SO2 is mostly undetectable in wine, but at free SO2 concentrations over 50 ppm, SO2 becomes evident in the nose and taste of wine. density : the density of water is close to that of water depending on the percent alcohol and sugar content. pH : describes how acidic or basic a wine is on a scale from 0 (very acidic) to 14 (very basic); most wines are between 3-4 on the pH scale. sulphates : a wine additive which can contribute to sulfur dioxide gas (S02) levels, which acts as an antimicrobial and antioxidant. alcohol : the percent alcohol content of the wine.  Output variable (based on sensory data):  quality : score between 0 and 10 given by human wine tasters.  Exploratory Data Analysis (EDA) # print out dataframe dimension or shape (rows x columns) df.shape  (1599, 12)  # print out information on the data df.info()  \u0026lt;class 'pandas.core.frame.DataFrame'\u0026gt; RangeIndex: 1599 entries, 0 to 1598 Data columns (total 12 columns): fixed acidity 1599 non-null float64 volatile acidity 1599 non-null float64 citric acid 1599 non-null float64 residual sugar 1599 non-null float64 chlorides 1599 non-null float64 free sulfur dioxide 1599 non-null float64 total sulfur dioxide 1599 non-null float64 density 1599 non-null float64 pH 1599 non-null float64 sulphates 1599 non-null float64 alcohol 1599 non-null float64 quality 1599 non-null int64 dtypes: float64(11), int64(1) memory usage: 150.0 KB  # print out summary information about all numeric data columns in your dataset. df.describe()   .dataframe tbody tr th:only-of-type { vertical-align: middle; } .dataframe tbody tr th { vertical-align: top; } .dataframe thead th { text-align: right; }  \n  fixed acidity volatile acidity citric acid residual sugar chlorides free sulfur dioxide total sulfur dioxide density pH sulphates alcohol quality     count 1599.000000 1599.000000 1599.000000 1599.000000 1599.000000 1599.000000 1599.000000 1599.000000 1599.000000 1599.000000 1599.000000 1599.000000   mean 8.319637 0.527821 0.270976 2.538806 0.087467 15.874922 46.467792 0.996747 3.311113 0.658149 10.422983 5.636023   std 1.741096 0.179060 0.194801 1.409928 0.047065 10.460157 32.895324 0.001887 0.154386 0.169507 1.065668 0.807569   min 4.600000 0.120000 0.000000 0.900000 0.012000 1.000000 6.000000 0.990070 2.740000 0.330000 8.400000 3.000000   25% 7.100000 0.390000 0.090000 1.900000 0.070000 7.000000 22.000000 0.995600 3.210000 0.550000 9.500000 5.000000   50% 7.900000 0.520000 0.260000 2.200000 0.079000 14.000000 38.000000 0.996750 3.310000 0.620000 10.200000 6.000000   75% 9.200000 0.640000 0.420000 2.600000 0.090000 21.000000 62.000000 0.997835 3.400000 0.730000 11.100000 6.000000   max 15.900000 1.580000 1.000000 15.500000 0.611000 72.000000 289.000000 1.003690 4.010000 2.000000 14.900000 8.000000     # print out the distribution on each column (variable) df.hist(bins = 50, edgecolor = 'b', grid = False, linewidth = 1.0, xlabelsize = 8, ylabelsize = 8, figsize = (16, 6), color = 'orange') plt.tight_layout(rect = (0, 0, 1.5, 1.5)) plt.suptitle('Red Wine Plots', x = 0.75, y = 1.65, fontsize = 20);  # print out histogram of the quality variable df['quality'].hist(bins = 6, grid = False, color = 'red', edgecolor = 'b')  \u0026lt;matplotlib.axes._subplots.AxesSubplot at 0x1a1f4fc438\u0026gt;  # print out the correlation matrix (for each column) df.corr()   .dataframe tbody tr th:only-of-type { vertical-align: middle; } .dataframe tbody tr th { vertical-align: top; } .dataframe thead th { text-align: right; }  \n  fixed acidity volatile acidity citric acid residual sugar chlorides free sulfur dioxide total sulfur dioxide density pH sulphates alcohol quality     fixed acidity 1.000000 -0.256131 0.671703 0.114777 0.093705 -0.153794 -0.113181 0.668047 -0.682978 0.183006 -0.061668 0.124052   volatile acidity -0.256131 1.000000 -0.552496 0.001918 0.061298 -0.010504 0.076470 0.022026 0.234937 -0.260987 -0.202288 -0.390558   citric acid 0.671703 -0.552496 1.000000 0.143577 0.203823 -0.060978 0.035533 0.364947 -0.541904 0.312770 0.109903 0.226373   residual sugar 0.114777 0.001918 0.143577 1.000000 0.055610 0.187049 0.203028 0.355283 -0.085652 0.005527 0.042075 0.013732   chlorides 0.093705 0.061298 0.203823 0.055610 1.000000 0.005562 0.047400 0.200632 -0.265026 0.371260 -0.221141 -0.128907   free sulfur dioxide -0.153794 -0.010504 -0.060978 0.187049 0.005562 1.000000 0.667666 -0.021946 0.070377 0.051658 -0.069408 -0.050656   total sulfur dioxide -0.113181 0.076470 0.035533 0.203028 0.047400 0.667666 1.000000 0.071269 -0.066495 0.042947 -0.205654 -0.185100   density 0.668047 0.022026 0.364947 0.355283 0.200632 -0.021946 0.071269 1.000000 -0.341699 0.148506 -0.496180 -0.174919   pH -0.682978 0.234937 -0.541904 -0.085652 -0.265026 0.070377 -0.066495 -0.341699 1.000000 -0.196648 0.205633 -0.057731   sulphates 0.183006 -0.260987 0.312770 0.005527 0.371260 0.051658 0.042947 0.148506 -0.196648 1.000000 0.093595 0.251397   alcohol -0.061668 -0.202288 0.109903 0.042075 -0.221141 -0.069408 -0.205654 -0.496180 0.205633 0.093595 1.000000 0.476166   quality 0.124052 -0.390558 0.226373 0.013732 -0.128907 -0.050656 -0.185100 -0.174919 -0.057731 0.251397 0.476166 1.000000     # print out correlation heatmap using 'seaborn' library sns.heatmap(df.corr(), cmap = \u0026quot;YlGnBu\u0026quot;)  \u0026lt;matplotlib.axes._subplots.AxesSubplot at 0x1a1fad1400\u0026gt;  Modeling Using Linear Regression # Create a linear regression model: model = LinearRegression() # Train (\u0026quot;fit\u0026quot;) the model: model = model.fit(df[ ['fixed acidity', 'volatile acidity', 'citric acid', 'residual sugar', 'chlorides', 'free sulfur dioxide', 'total sulfur dioxide', 'density', 'pH', 'sulphates','alcohol'] ], df['quality'] )  # print out the intercept: intercept = model.intercept_ intercept  21.965208449448177  # print out the slope (as table): slope = model.coef_ coeff_df = pd.DataFrame(slope, ['fixed acidity', 'volatile acidity', 'citric acid', 'residual sugar', 'chlorides', 'free sulfur dioxide', 'total sulfur dioxide', 'density', 'pH', 'sulphates','alcohol'] , columns = ['Coefficient']) coeff_df   .dataframe tbody tr th:only-of-type { vertical-align: middle; } .dataframe tbody tr th { vertical-align: top; } .dataframe thead th { text-align: right; }  \n  Coefficient     fixed acidity 0.024991   volatile acidity -1.083590   citric acid -0.182564   residual sugar 0.016331   chlorides -1.874225   free sulfur dioxide 0.004361   total sulfur dioxide -0.003265   density -17.881164   pH -0.413653   sulphates 0.916334   alcohol 0.276198     # create prediction using our model df[\u0026quot;predicted\u0026quot;] = model.predict( df[ ['fixed acidity', 'volatile acidity', 'citric acid', 'residual sugar', 'chlorides', 'free sulfur dioxide', 'total sulfur dioxide', 'density', 'pH', 'sulphates','alcohol'] ] ) df[\u0026quot;predicted\u0026quot;] = round(df[\u0026quot;predicted\u0026quot;], 0) df[\u0026quot;predicted\u0026quot;]  0 5.0 1 5.0 2 5.0 3 6.0 4 5.0 ... 1594 6.0 1595 6.0 1596 6.0 1597 5.0 1598 6.0 Name: predicted, Length: 1599, dtype: float64  Results   Relationship of pH and fixed acidity  From the correlation matrix (in EDA section), we can see that pH and fixed acidity have the highest correlation with the value of -0.682978.    # Create a scatter plot between 'pH' (x-axis) and 'fixed acidity'(y-axis). df.plot.scatter(x = 'pH', y = 'fixed acidity')  \u0026lt;matplotlib.axes._subplots.AxesSubplot at 0x1a2009fb00\u0026gt;  This negative correlation might be obvious and understandable since\n pH is the measure of acidity/basicity with a scale between 0 (very acid) and 14 (very basic) # information taken from chemistry class so the more acidic is a solution, pH value will decrease. as indicated in the data description, most wines are acidic and have pH values of 3-4 # in this data (lowest = 2.74 and highest = 4.01) obtained from EDA section.  Therefore, we can conclude that there is a causation between pH and fixed acidity.\n  Relationship of quality and alcohol  From the correlation matrix (in EDA section), we found out that alcohol has the highest correlation with our target or response variable quality with a value of 0.476166.    # visualization using 'seaborn' library for scatter plot between 'alcohol' and 'quality' sns.set() sns.relplot(data = df, x = 'alcohol', y = 'quality', kind = 'line', height = 6, aspect = 2, color = 'red');    The plot above clearly reflects the positive correlation between quality and alcohol. Where an increase in the alcohol level (\u0026lt; 14) might result in a better wine quality.\n  One important thing to mention is:\n This might not be necessarily true since there are cases where a higher quality level might result in lower wine quality. (in this dataset, for instance, a wine with 9% alcohol level has a lower quality than wine with 8% alcohol level). While there is a positive correlation between quality and alcohol their relationship does not indicate causality.    Discussion The predictive ability of our model is very low with an accuracy of only 59.16%. This means our model does a really bad job on predicting the wine quality.\n This bad results (predictive power) might be due to:  Limited predictor variable; in this dataset, we are only given variables that are based on physicochemical tests (lab tests such as alcohol percentage level, pH value, etc.). There are many predictor variables that might be more helpful in order to predict the wine quality such as grape type, wine age, vineyard location, and etc.    # check our model accuracy (df[\u0026quot;predicted\u0026quot;] == df[\u0026quot;quality\u0026quot;]).mean()  0.5916197623514696  Solutions and Recommendations:  Obtain more data (predictor variables and samples) and do another analysis.  ","date":1575676800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1575676800,"objectID":"f28591165b8f3b74fc901c7e971174a3","permalink":"/post/wine-eda/","publishdate":"2019-12-07T00:00:00Z","relpermalink":"/post/wine-eda/","section":"post","summary":"Learn how to do basic EDA in Python using Jupyter notebooks","tags":["EDA","Linear-regression","plot"],"title":"Basic Exploratory Data Analysis and Simple Linear Regression in Python","type":"post"},{"authors":["Vincent Oktavianus"],"categories":["Python"],"content":"import skimage import skimage.io import pandas as pd import PIL from PIL import Image from os import listdir from os.path import isfile, join import sys  Creating a Mosaic - Part 2 Finding the Average Color of a Region of an Image In Part 1, you found the average color of an image. For this part, find the average color of a region of the image array lab, a starting location (x and y), and a width and height. You need to return the same data type as in Part 1 (a dictionary with L, a, and b).\ndef findAverageColor(lab, x, y, width, height): # Your code here sumL, suma, sumb = 0, 0, 0 count = 0 for v in range(x, x + height): for w in range(y, y + width): L, a, b = lab[v][w] sumL += L suma += a sumb += b count += 1 return {'L': sumL/count, 'a': suma/count, 'b': sumb/count}  ## == TEST CASES for Part 2a == # - This read-only cell contains test cases for your previous cell(s). # - If this cell runs without any errors in the output, you PASSED all test cases! # - If this cell results errors, check you previous cell, make changes, and RE-RUN your code and then this cell. info = '\\N{INFORMATION SOURCE}' rgb1 = skimage.io.imread(\u0026quot;test.png\u0026quot;) lab1 = skimage.color.rgb2lab(rgb1) test = findAverageColor(lab1, 0, 0, 4, 4) assert( test != None ), \u0026quot;Your findAverageColor function must return a value (right now it's returning nothing).\u0026quot; assert( type(test) == type({}) ), f\u0026quot;Your findAverageColor function must return a dictionary (right now it's returning {type(test)}).\u0026quot; assert( 'L' in test ), \u0026quot;Your findAverageColor must return a value for 'L'.\u0026quot; assert( 'a' in test ), \u0026quot;Your findAverageColor must return a value for 'a'.\u0026quot; assert( 'b' in test ), \u0026quot;Your findAverageColor must return a value for 'b'.\u0026quot; print(f\u0026quot;{info} Your test.png values (0, 0) -\u0026gt; (4, 4): (L={test['L']}, a={test['a']}, b={test['b']})\u0026quot;) assert( abs(test['L'] - 54.244) \u0026gt; 0.001 ), \u0026quot;Your 'L' value is the value of only orange pixels. Are you sure you are visiting every pixel?\u0026quot; assert( abs(test['a'] - 59.314) \u0026gt; 0.001 ), \u0026quot;Your 'a' value is the value of only orange pixels. Are you sure you are visiting every pixel?\u0026quot; assert( abs(test['b'] - 52.9799) \u0026gt; 0.001 ), \u0026quot;Your 'b' value is the value of only orange pixels. Are you sure you are visiting every pixel?\u0026quot; assert( abs(test['L'] - 47.197) \u0026lt; 0.001 ), \u0026quot;Your 'L' value is not correct on test.png.\u0026quot; assert( abs(test['a'] - 49.034) \u0026lt; 0.001 ), \u0026quot;Your 'a' value is not correct on test.png.\u0026quot; assert( abs(test['b'] - 38.609) \u0026lt; 0.001 ), \u0026quot;Your 'b' value is not correct on test.png.\u0026quot; test2 = findAverageColor(lab1, 0, 0, 2, 2) print(f\u0026quot;{info} Your test.png values (0, 0) -\u0026gt; (2, 2): (L={test2['L']}, a={test2['a']}, b={test2['b']})\u0026quot;) assert( abs(test2['L'] - 54.244) \u0026lt; 0.001 ), \u0026quot;Your 'L' value is not correct on test.png when using only 2x2.\u0026quot; assert( abs(test2['a'] - 59.314) \u0026lt; 0.001 ), \u0026quot;Your 'a' value is not correct on test.png when using only 2x2.\u0026quot; assert( abs(test2['b'] - 52.9799) \u0026lt; 0.001 ), \u0026quot;Your 'b' value is not correct on test.png when using only 2x2.\u0026quot; rgb3 = skimage.io.imread(\u0026quot;test3.png\u0026quot;) lab3 = skimage.color.rgb2lab(rgb3) test3 = findAverageColor(lab3, 0, 0, 4, 6) print(f\u0026quot;{info} Your test3.png values (0, 0) -\u0026gt; (4, 6): (L={test3['L']}, a={test3['a']}, b={test3['b']})\u0026quot;) assert( abs(test3['L'] - 46.414) \u0026lt; 0.001 ), \u0026quot;Your 'L' value is not correct on test3.png.\u0026quot; assert( abs(test3['a'] - 47.892) \u0026lt; 0.001 ), \u0026quot;Your 'a' value is not correct on test3.png.\u0026quot; assert( abs(test3['b'] - 37.012) \u0026lt; 0.001 ), \u0026quot;Your 'b' value is not correct on test3.png.\u0026quot; ## == SUCCESS MESSAGE == # You will only see this message (with the emoji showing) if you passed all test cases: tada = \u0026quot;\\N{PARTY POPPER}\u0026quot; print() print(f\u0026quot;{tada} All tests passed! {tada}\u0026quot;)  ℹ Your test.png values (0, 0) -\u0026gt; (4, 4): (L=47.19722525581813, a=49.03421116311881, b=38.60877549417687) ℹ Your test.png values (0, 0) -\u0026gt; (2, 2): (L=54.244093289693964, a=59.3141053878179, b=52.979879933089656) ℹ Your test3.png values (0, 0) -\u0026gt; (4, 6): (L=46.41423991872082, a=47.89200069370779, b=37.011986112075455) 🎉 All tests passed! 🎉  Finding the best match In Part 1, you saved a csv file of all tile images. For this part, you will find the best tile image given an L, a, and b value and your DataFrame, passed in as df, in the same format as you saved in Part 1.\nThis function must return a new DataFrame with exactly one row that contains the best match out of all of the images in df based on the Euclidean distance away from the provided (L, a, b). (You should not remove rows from df itself, as the same df will be passed to you each time; make sure to assign your smallest one row to a new and differently named DataFrame.)\n# Returns the filename for the image that is the best match given an L, a, and b value. def findBestMatch(df, L, a, b): bestmatch = 10000 name = \u0026quot;nil\u0026quot; for i in range(len(df)): diff_L = abs(df['L'][i] - L) diff_a = abs(df['a'][i] - a) diff_b = abs(df['b'][i] - b) avg = pd.DataFrame([diff_L, diff_a, diff_b]).sum() if float(avg) \u0026lt; float(bestmatch): bestmatch = avg name = df[\u0026quot;file\u0026quot;][i] return df[df.file == name]  ## == TEST CASES for Part 2b == # - This read-only cell contains test cases for your previous cell(s). # - If this cell runs without any errors in the output, you PASSED all test cases! # - If this cell results errors, check you previous cell, make changes, and RE-RUN your code and then this cell. real_df = pd.DataFrame([ {'file': 'test.png', 'L': 47.19722525581813, 'a': 49.03421116311881, 'b': 38.60877549417687}, {'file': 'test2.png', 'L': 54.24409328969397, 'a': 59.3141053878179, 'b': 52.97987993308968}, {'file': 'test3.png', 'L': 46.41423991872082, 'a': 47.89200069370779, 'b': 37.011986112075455} ]) bestMatch = findBestMatch(real_df, 0, 0, 0) assert(type(bestMatch) == type(pd.DataFrame())), \u0026quot;findBestMatch must return a DataFrame\u0026quot; assert(len(bestMatch) == 1), \u0026quot;findBestMatch must return exactly one best match\u0026quot; assert(bestMatch['file'].values[0] == 'test3.png'), \u0026quot;findBestMatch did not return the best match for test (L=0, a=0, b=0)\u0026quot; bestMatch = findBestMatch(real_df, 47, 49, 38) assert(bestMatch['file'].values[0] == 'test.png'), \u0026quot;findBestMatch did not return the best match for test (L=47, a=49, b=38)\u0026quot; bestMatch = findBestMatch(real_df, 54, 49, 38) assert(bestMatch['file'].values[0] == 'test.png'), \u0026quot;findBestMatch did not return the best match for test (L=54, a=49, b=38)\u0026quot; bestMatch = findBestMatch(real_df, 54, 49, 52) assert(bestMatch['file'].values[0] == 'test2.png'), \u0026quot;findBestMatch did not return the best match for test (L=54, a=49, b=52)\u0026quot; bestMatch = findBestMatch(real_df, -100, -100, -100) assert(bestMatch['file'].values[0] == 'test3.png'), \u0026quot;findBestMatch did not return the best match for test (L=-100, a=-100, b=-100)\u0026quot; ## == SUCCESS MESSAGE == # You will only see this message (with the emoji showing) if you passed all test cases: tada = \u0026quot;\\N{PARTY POPPER}\u0026quot; print(f\u0026quot;{tada} All tests passed! {tada}\u0026quot;)  🎉 All tests passed! 🎉  Creating your mosaic! There are two majors values you can adjust:\n  tilesAcross controls how many tiles should make up the width of the mosaic image. The larger this number, the more tiles you will have, the better your image will look (assuming good tiles), but the slower this will run.\n  outputSize controls the size each tile image is drawn. The larger this number, the more detail you will have in each tile image, the more you will be able to zoom in, but the bigger the output file will be in the end.\n  Adjust these values here:\n# How many tiles across each row do you want in your final image? # ...this number is approximate, the exact tiles will find the best match to the size of your image around this number. tilesAcross = 200 # How big should each tile be rendered in the masaic image? outputSize = 26  Finally, the following code uses your image from Part 1, your DataFrame of average colors for each image, the findAverageColor function from Part 2a, and findBestMatch function from Part 2b to draw a mosaic image!\nMake sure to add the file you want to make a mosaic out of in base.jpg and run this cell:\n# Load the saved image data (from Part 1) print(\u0026quot;Loading in saved average image values...\u0026quot;) df = pd.read_csv('tile-images.csv') # Load the moasic image: print(\u0026quot;Loading the base.jpg image...\u0026quot;) rgb = skimage.io.imread(\u0026quot;base.jpg\u0026quot;) lab = skimage.color.rgb2lab(rgb) w = len(lab) h = len(lab[0]) # Ensure we have no half-tiles (this will cut off the edge of the photo if needed) tileSize = int(w / tilesAcross) w_tiles = int(w / tileSize) h_tiles = int(h / tileSize) w = w_tiles * tileSize h = h_tiles * tileSize # Create a final image of the correct size to draw the final mosaic on: baseImage = Image.new('RGB', (outputSize * h_tiles, outputSize * w_tiles)) # Store images used to speed up processing (often once an image is used once, it will be used again): cache = {} print(f\u0026quot;Creating your moasic ({w_tiles} x {h_tiles} = {w_tiles * h_tiles} total tiles)...\u0026quot;) for x in range(0, w, tileSize): for y in range(0, h, tileSize): # Find the average color for the current tile: tileAvgColor = findAverageColor(lab, x, y, tileSize, tileSize) # Find the best file match: df_bestMatch = findBestMatch(df, tileAvgColor['L'], tileAvgColor['a'], tileAvgColor['b']) bestFileName = df_bestMatch['file'].values[0] # load the iamge in and resize it to be a `outputSize` x `outputSize` (or get it from the cache) if bestFileName in cache: smallTile = cache[bestFileName] else: tileImage = Image.open(bestFileName) tileW, tileH = tileImage.size tileD = min(tileW, tileH) smallTile = tileImage.crop( (0, 0, tileD, tileD) ).resize( (outputSize, outputSize), resample=PIL.Image.LANCZOS ) cache[bestFileName] = smallTile # Draw the tile: baseImage.paste(smallTile, ( int((y / tileSize) * outputSize), int((x / tileSize) * outputSize))) # Print out a progress message: completed = int((x / tileSize) + 1) * tileSize pct = completed / (w_tiles * tileSize) * 100 sys.stdout.write(f'\\r ...finished: {completed} / {w_tiles * tileSize} ({pct:.2f}%)') # Save the image as mosaic.jpg baseImage.save('mosaic.jpg') # Print a message: tada = \u0026quot;\\N{PARTY POPPER}\u0026quot; print(\u0026quot;\u0026quot;) print(\u0026quot;\u0026quot;) print(f\u0026quot;{tada} MOSAIC COMPLETE! {tada}\u0026quot;) print(\u0026quot;- See mosaic.jpg to see your mosaic!\u0026quot;)  Loading in saved average image values... Loading the base.jpg image... Creating your moasic (206 x 161 = 33166 total tiles)... ...finished: 412 / 412 (100.00%) 🎉 MOSAIC COMPLETE! 🎉 - See mosaic.jpg to see your moasic!  Results ","date":1572480000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1572480000,"objectID":"d6edad938d6ebe1d600ee9ee5fd6a9fb","permalink":"/post/mosaic02/","publishdate":"2019-10-31T00:00:00Z","relpermalink":"/post/mosaic02/","section":"post","summary":"We will build a function to create our own mosaic","tags":["Python"],"title":"Creating a Mosaic [Part. 2]","type":"post"},{"authors":["Vincent Oktavianus"],"categories":["Python"],"content":"import skimage import skimage.io import pandas as pd import PIL from PIL import Image from os import listdir from os.path import isfile, join import sys  Creating a Mosaic - Part 1 To follow through, you can open my github repository.\nProgramming! Create findAverageImageColor function:\ndef findAverageImageColor(fileName): # Your code here! sumL, suma, sumb = 0, 0, 0 count = 0 rgb = skimage.io.imread(fileName) lab = skimage.color.rgb2lab(rgb) width = len(lab) height = len(lab[0]) for x in range(width): for y in range(height): L, a, b = lab[x][y] sumL += L suma += a sumb += b count += 1 return {'L': sumL/count, 'a': suma/count, 'b': sumb/count}  Test Cases These test cases help you debug your code to make sure you\u0026rsquo;re finding the correct average values for known images. After you pass these test cases, then you\u0026rsquo;ll start using your own images! :)\n## == TEST CASES for Part 1c == # - This read-only cell contains test cases for your previous cell(s). # - If this cell runs without any errors in the output, you PASSED all test cases! # - If this cell results errors, check you previous cell, make changes, and RE-RUN your code and then this cell. info = '\\N{INFORMATION SOURCE}' test = findAverageImageColor('test.png') assert( test != None ), \u0026quot;Your findAverageImageColor function must return a value (right now it's returning nothing).\u0026quot; assert( type(test) == type({}) ), f\u0026quot;Your findAverageImageColor function must return a dictionary (right now it's returning {type(test)}).\u0026quot; assert( 'L' in test ), \u0026quot;Your findAverageImageColor must return a value for 'L'.\u0026quot; assert( 'a' in test ), \u0026quot;Your findAverageImageColor must return a value for 'a'.\u0026quot; assert( 'b' in test ), \u0026quot;Your findAverageImageColor must return a value for 'b'.\u0026quot; print(f\u0026quot;{info} Your test.png values: (L={test['L']}, a={test['a']}, b={test['b']})\u0026quot;) assert( abs(test['L'] - 54.244) \u0026gt; 0.001 ), \u0026quot;Your 'L' value is the value of only orange pixels. Are you sure you are visiting every pixel?\u0026quot; assert( abs(test['a'] - 59.314) \u0026gt; 0.001 ), \u0026quot;Your 'a' value is the value of only orange pixels. Are you sure you are visiting every pixel?\u0026quot; assert( abs(test['b'] - 52.9799) \u0026gt; 0.001 ), \u0026quot;Your 'b' value is the value of only orange pixels. Are you sure you are visiting every pixel?\u0026quot; assert( abs(test['L'] - 47.197) \u0026lt; 0.001 ), \u0026quot;Your 'L' value is not correct on test.png.\u0026quot; assert( abs(test['a'] - 49.034) \u0026lt; 0.001 ), \u0026quot;Your 'a' value is not correct on test.png.\u0026quot; assert( abs(test['b'] - 38.609) \u0026lt; 0.001 ), \u0026quot;Your 'b' value is not correct on test.png.\u0026quot; test2 = findAverageImageColor('test2.png') print(f\u0026quot;{info} Your test2.png values: (L={test2['L']}, a={test2['a']}, b={test2['b']})\u0026quot;) assert( abs(test2['L'] - 54.244) \u0026lt; 0.001 ), \u0026quot;Your 'L' value is not correct on test2.png.\u0026quot; assert( abs(test2['a'] - 59.314) \u0026lt; 0.001 ), \u0026quot;Your 'a' value is not correct on test2.png.\u0026quot; assert( abs(test2['b'] - 52.9799) \u0026lt; 0.001 ), \u0026quot;Your 'b' value is not correct on test2.png.\u0026quot; test3 = findAverageImageColor('test3.png') print(f\u0026quot;{info} Your test3.png values: (L={test3['L']}, a={test3['a']}, b={test3['b']})\u0026quot;) assert( abs(test3['L'] - 46.414) \u0026lt; 0.001 ), \u0026quot;Your 'L' value is not correct on test3.png.\u0026quot; assert( abs(test3['a'] - 47.892) \u0026lt; 0.001 ), \u0026quot;Your 'a' value is not correct on test3.png.\u0026quot; assert( abs(test3['b'] - 37.012) \u0026lt; 0.001 ), \u0026quot;Your 'b' value is not correct on test3.png.\u0026quot; ## == SUCCESS MESSAGE == # You will only see this message (with the emoji showing) if you passed all test cases: tada = \u0026quot;\\N{PARTY POPPER}\u0026quot; print() print(f\u0026quot;{tada} All tests passed! {tada}\u0026quot;)  ℹ Your test.png values: (L=47.19722525581813, a=49.03421116311881, b=38.60877549417687) ℹ Your test2.png values: (L=54.24409328969397, a=59.3141053878179, b=52.97987993308968) ℹ Your test3.png values: (L=46.41423991872082, a=47.89200069370779, b=37.011986112075455) 🎉 All tests passed! 🎉  Your Images Once your function works and passes all the test cases, this code loads all files in the tile-images folder and stores the average color value of the image in tile-images.csv.\n This code is already complete, but depends on a correct findAverageImageColor function! Make sure your code is complete before running this function!  # What directory includes the images? imageDir = \u0026quot;tile-images\u0026quot; # Finds all files inside of `imageDir`: files = [imageDir + \u0026quot;/\u0026quot; + f for f in listdir(imageDir + \u0026quot;/\u0026quot;) if isfile(join(imageDir + \u0026quot;/\u0026quot;, f))] # Use `data` to store data about every image: data = [] # Loop through every file: print(f\u0026quot;Starting to process {len(files)} files...\u0026quot;) for file in files: try: # Run `findAverageImageColor` and store the result: result = findAverageImageColor(file) d = { 'file': file, 'L': result['L'], 'a': result['a'], 'b': result['b'] } data.append(d) pct = len(data) / len(files) * 100 sys.stdout.write(f\u0026quot;\\r ... {len(data)} / {len(files)} total files processed ({pct:.2f}%)\u0026quot;) except ValueError as e: print(f\u0026quot;!! {file} failed to process (this can happen if the image is black/white and has no color data?)\u0026quot;) print(\u0026quot;...if so, remove the image and run again.\u0026quot;) print(repr(e)) break # Save the data as a DataFrame and CSV file: df = pd.DataFrame(data) df.to_csv('tile-images.csv') df tada = \u0026quot;\\N{PARTY POPPER}\u0026quot; print(\u0026quot;\u0026quot;) print(\u0026quot;\u0026quot;) print(f\u0026quot;{tada} Image data saved as \u0026quot;\u0026quot;tile-images.csv\u0026quot;\u0026quot;\u0026quot;)  Starting to process 2113 files... ... 2113 / 2113 total files processed (100.00%) 🎉 Image data saved as tile-images.csv  Continue to Part 2  Part 2 will use the CSV file you saved, tile-images.csv, to build your image mosaic!  ","date":1571788800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1571788800,"objectID":"47deb7adae416be25d123f8939313939","permalink":"/post/mosaic01/","publishdate":"2019-10-23T00:00:00Z","relpermalink":"/post/mosaic01/","section":"post","summary":"We will build a function to create our own mosaic","tags":["Python"],"title":"Creating a Mosaic [Part. 1]","type":"post"},{"authors":[],"categories":["regression","modeling","R"],"content":"   1 Abstract 2 Introduction 3 Methods 4 Results 5 Discussion 6 Appendix   1 Abstract  Personal sleep tracking devices are becoming more and more popular. Statistical learning techniques are used to determine if it is possible to effectively predict time asleep from data that would be available without the aid of a sleep tracker.\n  2 Introduction It is without question that sleep is a very important process for both learning and memory. 1 For optimal learning, sleep, both in quality and quantity, is required before and after learning. Depending on certain demographic factors, there are different sleep prescriptions, but for adults, a minimum of seven hours is needed to avoid impairment. 2 Recently, the link between shift work and cancer has been well established. While more study is needed, there seems to be growing evidence that lack of sleep may play a strong causal role in many cancers. 3 As the public has become more aware of the importance of sleep, the use of “smart” devices to track sleep has risen. Many sleep trackers provide a wealth of information including not only time asleep, but also details such as time spent in the various stages of sleep. (Light, deep, REM.)\nThe effectiveness of these sleep devices is still in question. 4 While the breadth of data that they make available is interesting, the most important by far is the total time asleep. (Asleep being defined clinically, not by simply being in bed.) The additional data, such as time in REM sleep, is interesting, however it is unclear what the target values should be, and more importantly, how we could affect change in these numbers. In contrast, there is a wealth of advice on how to increase quality and time spent asleep. 5 If total time asleep is the only data worth tracking, is a smart device actually necessary? Is it possible to estimate time asleep based on simple metrics such as time spent in bed?\nStatistical learning techniques were applied to a four month sample of data from a Fitbit 6 user. Time spent in bed was used to predict total time asleep. The results indicate that this prediction can be made with a reasonably small amount of error. However, practical and statistical limitations suggest the need for further investigation.\n 3 Methods 3.1 Data The data was accessed via the data export tool provided by Fitbit. 7 It was collected using a Fitbit Versa 2 by a single subject, a 32 year old adult male living in Ohio and working as a professor. The Fitbit Versa 2 uses both motion and heart rate variability 8 to predict when the user is sleeping. The collection dates were a series of consecutive days in autumn of 2018. The two quantities of interest in the data are the time spent asleep and the time spent in bed each time the user sleeps. (A user could sleep more than once a day. For example, a two hour nap in the afternoon.) If the former can be predicted from the latter, the device seems unnecessary. (Time spent in bed could simply be tracked manually by a user. Although, it should be noted that one of the benefits of the devices is the automatic tracking of this quantity, which is probably more accurate than manual human tracking.)\n 3.2 Modeling In order to predict time asleep given time in bed, three modeling techniques were considered: linear models, k-nearest neighbors models, and tree models. No transformations were considered with the linear model. Default tuning parameters were used to train the two non-parametric models. Only time in bed was used as a predictor variable.\n 3.3 Evaluation To evaluate the ability to predict time asleep with these models, the data was split into estimation, validation, and testing sets. Because of the dependence structure of the data, that is the consecutive nature of the days, the data was split chronologically. That is, the test set is the last 20% of the data chronologically. (And similarly for the validation data.) This is done to evaluate the ability to predict future nights of sleep from past data. Error metrics and graphics are reported using the validation data in the Results section.\n  4 Results   model  rmse      Linear  8.444805    K-Nearest Neighbors  11.692058    Tree  15.112509      5 Discussion After calculating the Rooted Mean Squared Error (RMSE) which gives us an estimate of the average squared prediction error in the original units used by the response variable for the validation data, we can see that the linear model (without transformation) possess the lowest value of RMSE.\n## [1] 9.1931 Shown above is the value for our Test RMSE. In our linear model, the test RMSE and our validation RMSE is very similar which means there might be a little to no chance of overfit. Moreover, the plot for our linear model looks reasonable enough. Therefore, the linear model is our best model.\nWe are trying to predict the total sleep time based only the past data and one predictor which is very hard if we do not account a seasonal factor that could potentially result in limitations of our analysis. For instance, there might be a day where the observed person is very tired thus, he only spends a very little time in bed (’time_bed’) before he fell asleep. The inability to adjust our analysis to the seasonality effects may lead to false interpretations of the results from the analysis. Therefore, due to the RMSE value and limitations, using sleep tracking devices are still the best way to track our total sleep time even though our prediction is close enough to the actual value.\nFuture directions: We should consider using more variable as our predictor and also put the seasonal factor into account. By doing so we might further increase the accuracy of our predicted values.\n 6 Appendix 6.1 Data Dictionary  start_time - The date and time which the device detected the user has gone to bed due to lack of motion. (But not necessarily started sleep.) end_time - The date and time which the device detected that the user is no longer in bed, due to motion. min_asleep - The total sleep time, in minutes. This is meant to estimate a clinical measure of sleep. (Not simply time in bed.) min_awake - The time spent in bed, but awake, in minutes. num_awake - The number of times the user “awoke” during their time in bed. time_bed - Duration between start_time and end_time. The sum of min_asleep and min_awake. In other words, total time in bed, in minutes. min_rem - Total time spent in REM sleep, in minutes. min_light - Total time spent in light sleep, in minutes. min_deep - Total time spent in deep sleep, in minutes.   6.2 EDA    Harvard Medicine: Sleep, Learning, and Memory↩\n CDC: How Much Sleep Do I Need?↩\n Shift Work and Cancer, The Evidence and the Challenge↩\n Consumer sleep tracking devices: a review of mechanisms, validity and utility↩\n Everything you need to know about sleep, but are too tired to ask↩\n Wikipedia: Fitbit↩\n The author would like to note that Fitbit makes it incredibly difficult for users to obtain their own data.↩\n Wikipedia: Heart rate variability↩\n   ","date":1568764800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1568764800,"objectID":"37a6c2a53a5572584c75598810554535","permalink":"/post/are-sleep-trackers-effective/","publishdate":"2019-09-18T00:00:00Z","relpermalink":"/post/are-sleep-trackers-effective/","section":"post","summary":"Personal sleep tracking devices are becoming more and more popular. Statistical learning techniques are used to determine if it is possible to effectively predict time asleep from data that would be available without the aid of a sleep tracker.","tags":["R"],"title":"Are Sleep Trackers Effective?","type":"post"},{"authors":["admin"],"categories":null,"content":" Click the Slides button above to demo Academic\u0026rsquo;s Markdown slides feature.   Supplementary notes can be added here, including code and math.\n","date":1554595200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1554595200,"objectID":"557dc08fd4b672a0c08e0a8cf0c9ff7d","permalink":"/publication/preprint/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/publication/preprint/","section":"publication","summary":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum.","tags":["Source Themes"],"title":"An example preprint / working paper","type":"publication"},{"authors":[],"categories":[],"content":"Create slides in Markdown with Academic  Academic | Documentation\n Features  Efficiently write slides in Markdown 3-in-1: Create, Present, and Publish your slides Supports speaker notes Mobile friendly slides   Controls  Next: Right Arrow or Space Previous: Left Arrow Start: Home Finish: End Overview: Esc Speaker notes: S Fullscreen: F Zoom: Alt + Click  PDF Export: E   Code Highlighting Inline code: variable\nCode block:\nporridge = \u0026quot;blueberry\u0026quot; if porridge == \u0026quot;blueberry\u0026quot;: print(\u0026quot;Eating...\u0026quot;)   Math In-line math: $x + y = z$\nBlock math:\n$$ f\\left( x \\right) = ;\\frac{{2\\left( {x + 4} \\right)\\left( {x - 4} \\right)}}{{\\left( {x + 4} \\right)\\left( {x + 1} \\right)}} $$\n Fragments Make content appear incrementally\n{{% fragment %}} One {{% /fragment %}} {{% fragment %}} **Two** {{% /fragment %}} {{% fragment %}} Three {{% /fragment %}}  Press Space to play!\nOne  Two  Three \n A fragment can accept two optional parameters:\n class: use a custom style (requires definition in custom CSS) weight: sets the order in which a fragment appears   Speaker Notes Add speaker notes to your presentation\n{{% speaker_note %}} - Only the speaker can read these notes - Press `S` key to view {{% /speaker_note %}}  Press the S key to view the speaker notes!\n Only the speaker can read these notes Press S key to view    Themes  black: Black background, white text, blue links (default) white: White background, black text, blue links league: Gray background, white text, blue links beige: Beige background, dark text, brown links sky: Blue background, thin dark text, blue links    night: Black background, thick white text, orange links serif: Cappuccino background, gray text, brown links simple: White background, black text, blue links solarized: Cream-colored background, dark green text, blue links   Custom Slide Customize the slide style and background\n{{\u0026lt; slide background-image=\u0026quot;/img/boards.jpg\u0026quot; \u0026gt;}} {{\u0026lt; slide background-color=\u0026quot;#0000FF\u0026quot; \u0026gt;}} {{\u0026lt; slide class=\u0026quot;my-style\u0026quot; \u0026gt;}}   Custom CSS Example Let\u0026rsquo;s make headers navy colored.\nCreate assets/css/reveal_custom.css with:\n.reveal section h1, .reveal section h2, .reveal section h3 { color: navy; }   Questions?  Ask\n Documentation\n","date":1549324800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1549324800,"objectID":"0e6de1a61aa83269ff13324f3167c1a9","permalink":"/slides/example/","publishdate":"2019-02-05T00:00:00Z","relpermalink":"/slides/example/","section":"slides","summary":"An introduction to using Academic's Slides feature.","tags":[],"title":"Slides","type":"slides"},{"authors":null,"categories":null,"content":"","date":1461715200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1461715200,"objectID":"d1311ddf745551c9e117aa4bb7e28516","permalink":"/project/external-project/","publishdate":"2016-04-27T00:00:00Z","relpermalink":"/project/external-project/","section":"project","summary":"An example of linking directly to an external project website using `external_link`.","tags":["Demo"],"title":"External Project","type":"project"},{"authors":null,"categories":null,"content":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum. Sed ac faucibus dolor, scelerisque sollicitudin nisi. Cras purus urna, suscipit quis sapien eu, pulvinar tempor diam. Quisque risus orci, mollis id ante sit amet, gravida egestas nisl. Sed ac tempus magna. Proin in dui enim. Donec condimentum, sem id dapibus fringilla, tellus enim condimentum arcu, nec volutpat est felis vel metus. Vestibulum sit amet erat at nulla eleifend gravida.\nNullam vel molestie justo. Curabitur vitae efficitur leo. In hac habitasse platea dictumst. Sed pulvinar mauris dui, eget varius purus congue ac. Nulla euismod, lorem vel elementum dapibus, nunc justo porta mi, sed tempus est est vel tellus. Nam et enim eleifend, laoreet sem sit amet, elementum sem. Morbi ut leo congue, maximus velit ut, finibus arcu. In et libero cursus, rutrum risus non, molestie leo. Nullam congue quam et volutpat malesuada. Sed risus tortor, pulvinar et dictum nec, sodales non mi. Phasellus lacinia commodo laoreet. Nam mollis, erat in feugiat consectetur, purus eros egestas tellus, in auctor urna odio at nibh. Mauris imperdiet nisi ac magna convallis, at rhoncus ligula cursus.\nCras aliquam rhoncus ipsum, in hendrerit nunc mattis vitae. Duis vitae efficitur metus, ac tempus leo. Cras nec fringilla lacus. Quisque sit amet risus at ipsum pharetra commodo. Sed aliquam mauris at consequat eleifend. Praesent porta, augue sed viverra bibendum, neque ante euismod ante, in vehicula justo lorem ac eros. Suspendisse augue libero, venenatis eget tincidunt ut, malesuada at lorem. Donec vitae bibendum arcu. Aenean maximus nulla non pretium iaculis. Quisque imperdiet, nulla in pulvinar aliquet, velit quam ultrices quam, sit amet fringilla leo sem vel nunc. Mauris in lacinia lacus.\nSuspendisse a tincidunt lacus. Curabitur at urna sagittis, dictum ante sit amet, euismod magna. Sed rutrum massa id tortor commodo, vitae elementum turpis tempus. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean purus turpis, venenatis a ullamcorper nec, tincidunt et massa. Integer posuere quam rutrum arcu vehicula imperdiet. Mauris ullamcorper quam vitae purus congue, quis euismod magna eleifend. Vestibulum semper vel augue eget tincidunt. Fusce eget justo sodales, dapibus odio eu, ultrices lorem. Duis condimentum lorem id eros commodo, in facilisis mauris scelerisque. Morbi sed auctor leo. Nullam volutpat a lacus quis pharetra. Nulla congue rutrum magna a ornare.\nAliquam in turpis accumsan, malesuada nibh ut, hendrerit justo. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Quisque sed erat nec justo posuere suscipit. Donec ut efficitur arcu, in malesuada neque. Nunc dignissim nisl massa, id vulputate nunc pretium nec. Quisque eget urna in risus suscipit ultricies. Pellentesque odio odio, tincidunt in eleifend sed, posuere a diam. Nam gravida nisl convallis semper elementum. Morbi vitae felis faucibus, vulputate orci placerat, aliquet nisi. Aliquam erat volutpat. Maecenas sagittis pulvinar purus, sed porta quam laoreet at.\n","date":1461715200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1461715200,"objectID":"8f66d660a9a2edc2d08e68cc30f701f7","permalink":"/project/internal-project/","publishdate":"2016-04-27T00:00:00Z","relpermalink":"/project/internal-project/","section":"project","summary":"An example of using the in-built project page.","tags":["Deep Learning"],"title":"Internal Project","type":"project"},{"authors":["admin","Robert Ford"],"categories":null,"content":" Click the Cite button above to demo the feature to enable visitors to import publication metadata into their reference management software.    Click the Slides button above to demo Academic\u0026rsquo;s Markdown slides feature.   Supplementary notes can be added here, including code and math.\n","date":1441065600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1441065600,"objectID":"966884cc0d8ac9e31fab966c4534e973","permalink":"/publication/journal-article/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/publication/journal-article/","section":"publication","summary":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum.","tags":["Source Themes"],"title":"An example journal article","type":"publication"},{"authors":["admin","Robert Ford"],"categories":null,"content":" Click the Cite button above to demo the feature to enable visitors to import publication metadata into their reference management software.    Click the Slides button above to demo Academic\u0026rsquo;s Markdown slides feature.   Supplementary notes can be added here, including code and math.\n","date":1372636800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1372636800,"objectID":"69425fb10d4db090cfbd46854715582c","permalink":"/publication/conference-paper/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/publication/conference-paper/","section":"publication","summary":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum.","tags":["Source Themes"],"title":"An example conference paper","type":"publication"},{"authors":null,"categories":null,"content":"My blog posts are released under a Creative Commons Attribution-ShareAlike 4.0 International License.\n  ","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"53e892b8b41cc4caece1cfd5ef21d6e7","permalink":"/license/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/license/","section":"","summary":"My blog posts are released under a Creative Commons Attribution-ShareAlike 4.0 International License.\n  ","tags":null,"title":"LICENSE: CC-BY-SA","type":"page"},{"authors":null,"categories":null,"content":"","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"6d99026b9e19e4fa43d5aadf147c7176","permalink":"/contact/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/contact/","section":"","summary":"A little more about me and how to get in touch","tags":null,"title":"About / Contact","type":"widget_page"},{"authors":null,"categories":null,"content":"","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"293f0333f59806aeb48f65fcb6b624e2","permalink":"/lancelot/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/lancelot/","section":"","summary":"Page for Lancelot","tags":null,"title":"Lancelot the HusTle","type":"widget_page"}]